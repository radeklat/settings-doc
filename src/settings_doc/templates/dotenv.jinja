{#
    The `--heading-offset` command line parameter is exposed as `heading_offset` variable.

    See https://github.com/samuelcolvin/pydantic/blob/master/pydantic/fields.py for field structure.
    Each `field` in `fields` is instance of `FieldInfo`.
    Extra parameters unknown to pydantic are stored in `field.json_schema_extra`.

    To see all possible values, run this generator with `--format debug`.
#}
{% for env_name, field in fields %}
    {% if field.description %}
# {{ field.description|replace("\n", "\n# ") }}
    {% endif %}
    {% if is_typing_literal(field) %}
        {% set possible_values = field.annotation.__args__ %}
    {% elif field.json_schema_extra and "possible_values" in field.json_schema_extra %}
        {% set possible_values = field.json_schema_extra.possible_values %}
    {% endif %}
    {% if possible_values %}
# Possible values:
        {% if not is_values_with_descriptions(possible_values) %}
            {% if possible_values|join("`, `")|length + 6 <= 75 %}
#   `{{ possible_values|join("`, `") }}`
            {% else %}
                {% for value in possible_values %}
#   - `{{ value }}`
                {% endfor %}
            {% endif %}
        {% else %}
            {% for value in possible_values %}
                {% if value.__class__.__name__ == "tuple" and value|length <= 2 %}
                    {% if value|length == 2 %}
#   - `{{ value[0] }}`: {{ value[1]|replace("\n", "\n# ") }}
                    {% else %}
#   - `{{ value[0] }}`
                    {% endif %}
                {% else %}
#   - `{{ value }}`
                {% endif %}
            {% endfor %}
        {% endif %}
    {% endif %}
{% if not field.is_required() %}# {% endif %}{{ env_name|upper }}={% if has_default_value(field) and field.default is not none %}{{ field.default }}{% endif %}


{% endfor %}
