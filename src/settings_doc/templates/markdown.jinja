{#
    The `--heading-offset` command line parameter is exposed as `heading_offset` variable.

    See https://github.com/samuelcolvin/pydantic/blob/master/pydantic/fields.py for field structure.
    Each `field` in `fields` is instance of `FieldInfo`.
    Extra parameters unknown to pydantic are stored in `field.json_schema_extra`.

    To see all possible values, run this generator with `--format debug`.
#}
{% macro heading(level) -%}
    {{ '#' * (heading_offset + level) }}
{%- endmacro %}
{% for env_name, field in fields %}{% if not loop.first %}

{% else %}{% endif %}{{ heading(1) }} `{{ env_name|upper }}`

*{% if field.is_required() %}*Required*{% else %}Optional{% endif %}*{% if has_default_value(field) %}, default value: `{{ field.default }}`{% endif %}

{% if field.description %}

{{ field.description }}
{% endif %}
    {% if field.examples %}
        {% set display_values = field.examples %}
        {% set values_section_name = "Examples" %}
    {% elif is_typing_literal(field) %}
        {% set display_values = field.annotation.__args__ %}
        {% set values_section_name = "Possible values" %}
    {% endif %}
    {% if display_values %}

{{ heading(2) }} {{ values_section_name }}

        {% if not is_values_with_descriptions(display_values) %}
            {% if display_values|join("`, `")|length + 2 <= 75 %}
`{{ display_values|join("`, `") }}`
            {% else %}
                {% for value in display_values %}
- `{{ value }}`
                {% endfor %}
            {% endif %}
        {% else %}
            {% for value in display_values %}
                {% if value.__class__.__name__ == "tuple" and value|length <= 2 %}
                    {% if value|length == 2 %}
- `{{ value[0] }}`: {{ value[1] }}
                    {% else %}
- `{{ value[0] }}`
                    {% endif %}
                {% else %}
- `{{ value }}`
                {% endif %}
            {% endfor %}

        {% endif %}
    {% endif %}
{% endfor %}